name: create-pr-edge-next

on:
  workflow_dispatch:

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - create-pr-edge-next

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: create tag
        id: create_tag
        run: |
          suffix=rc

          # fetch tags
          git fetch --tags
          
          # get latest tag that looks like a semver (with or without v)
          tag=$(git tag --list --merged prod --sort=-v:refname | grep -E "^v?[0-9]+\.[0-9]+\.[0-9]+$" | head -n1)
          echo found Tag $tag
          pre_tag=$(git tag --list --merged prod --sort=-v:refname | grep -E "^v?[0-9]+\.[0-9]+\.[0-9]+(-$suffix\.[0-9]+)?$" | head -n1)
          echo found Pre-release Tag $pre_tag
          
          # get current commit hash for tag
          tag_commit=$(git rev-list -n 1 $tag)
          
          # get current commit hash
          commit=$(git rev-parse HEAD)
          
          if [ "$tag_commit" == "$commit" ]
          then
            echo "No new commits since previous tag. Skipping..."
            echo ::set-output name=tag::$tag
            exit 0
          fi
        
          # bump version
          default_semvar_bump=none
          
          if [ "$default_semvar_bump" == "none" ]
          then
            echo "Default bump was set to none. Skipping..."; echo ::set-output name=new_tag::$tag; exit 0
          else
            new=$(semver -i "${default_semvar_bump}" $tag)
          fi
        
          pre_release="true"
          echo "Pre-release = $pre_release"
          
          if $pre_release 
          then
            # Already a prerelease available, bump it
            if [[ "$pre_tag" == *"$new"* ]]
            then
              new=$(semver -i prerelease $pre_tag --preid $suffix); 
            else
              new="$new-$suffix.1"; 
            fi
          fi

          # prefix with 'v'
          new="v$new"
          
          # set outputs
          echo ::set-output name=new_tag::$new

      - name: compile pull request
        id: compile_pr
        run: |
          
          output=$(ruby ./script/create-pr next edge) 
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}" 
          echo "::set-output name=pr_body::$output"

      - name: create pull request
        uses: devops-infra/action-pull-request@v0.4.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ steps.create_tag.outputs.new_tag }} | Release [next]
          body: ${{ steps.compile_pr.outputs.pr_body }}
          source_branch: edge
          target_branch: next
          label: github-action